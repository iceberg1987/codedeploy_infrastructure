{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "MachineImage": {
      "Type": "String",
      "Default": "ami-6869aa05"
    },
    "MovieTalbeId": {
      "Type": "String"
    }
  },
  "Resources": {
    "EC2Role": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "dynamodb",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:*",
                  ],
                  "Resource": {"Ref", "MovieTableId"}
                }
              ]
            }
          },
          {
            "PolicyName": "s3",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:*"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "EC2InstanceProfile": {
      "DependsOn": [
        "EC2Role"
      ],
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [
          {"Ref": "EC2Role"}
        ]
      }
    },
    "SecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "security group",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "FromPort": "22",
            "ToPort": "22",
            "IpProtocol": "tcp"
          },
          {
            "CidrIp": "0.0.0.0/0",
            "FromPort": "80",
            "ToPort": "80",
            "IpProtocol": "tcp"
          }
        ]
      }
    },
    "LaunchConfiguration": {
      "DependsOn": [
        "EC2InstanceProfile",
        "SecurityGroup"
      ],
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "IamInstanceProfile": {"Ref": "EC2InstanceProfile"},
        "ImageId": {"Ref": "MachineImage"},
        "InstanceType": "t2.micro",
        "KeyName": "zhankuil-us-east-1",
        "SecurityGroups": [
          {"Ref": "SecurityGroup"}
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -xe\n",
                "yum -y update\n",
                "yum install -y ruby\n",
                "yum install -y aws-cli\n",
                "cd /home/ec2-user/\n",
                "aws s3 cp s3://aws-codedeploy-", {"Ref": "AWS::Region"},
                "/latest/install . --region ", {"Ref": "AWS::Region"}, "\n",
                "chmod +x ./install\n",
                "./install auto\n"
              ]
            ]
          }
        }
      }
    },
    "AutoScalingGroup": {
      "DependsOn": [
        "LaunchConfiguration"
      ],
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "DesiredCapacity": "2",
        "LaunchConfigurationName": {"Ref": "LaunchConfiguration"},
        "MaxSize": "2",
        "MinSize": "2",
        "AvailabilityZones": {"Fn::GetAZs": {"Ref": "AWS::Region"}}
      }
    },
    "CodeDeployServiceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "codedeploy.amazonaws.com"
                ]
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "ec2",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [{
                "Effect": "Allow",
                "Action": [
                  "ec2:Describe*",
                  "autoscaling:CompleteLifecycleAction",
                  "autoscaling:DeleteLifecycleHook",
                  "autoscaling:DescribeAutoscalingGroups",
                  "autoscaling:DescribeLifecycleHooks",
                  "autoscaling:PutInstanceInService",
                  "autoscaling:PutInstanceInStandby",
                  "autoscaling:PutLifecycleHook",
                  "autoscaling:RecordLifecycleActionHeartbeat"
                ],
                "Resource": "*"
              }]
            }
          }
        ]
      }
    },
    "CodeDeployApplication": {
      "Type": "AWS::CodeDeploy::Application"
    },
    "CodeDeployDeploymentConfig": {
      "Type": "AWS::CodeDeploy::DeploymentConfig",
      "Properties": {
        "MinimumHealthyHosts": {
          "Type": "HOST_COUNT",
          "Value": 1
        }
      }
    },
    "CodeDeployDeploymentGroup": {
      "Type": "AWS::CodeDeploy::DeploymentGroup",
      "Properties": {
        "ApplicationName": {"Ref": "CodeDeployApplication"},
        "DeploymentConfigName": {"Ref": "CodeDeployDeploymentConfig"},
        "ServiceRoleArn": {"Fn::GetAtt": ["CodeDeployServiceRole", "Arn"]},
        "AutoScalingGroups": [
          {"Ref": "AutoScalingGroup"}
        ]
      }
    }
  }
}
